name: CI/CD Pipeline

on:
  push:
    branches: [main, dev]
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.0.x'
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          
    - name: Restore dependencies
      run: dotnet restore ThreadPilot.Integration.sln
      
    - name: Build solution
      run: dotnet build ThreadPilot.Integration.sln --configuration Release --no-restore
      
    - name: Run tests with coverage
      run: |
        dotnet test ThreadPilot.Integration.sln \
          --configuration Release \
          --no-build \
          --verbosity normal \
          --collect:"XPlat Code Coverage" \
          --results-directory ./coverage \
          --logger trx \
          --logger "console;verbosity=detailed"
          
    - name: Install ReportGenerator
      run: dotnet tool install -g dotnet-reportgenerator-globaltool
      
    - name: Generate coverage report
      run: |
        reportgenerator \
          -reports:"coverage/**/coverage.cobertura.xml" \
          -targetdir:"coverage/report" \
          -reporttypes:"Html;Cobertura;JsonSummary"
          
    - name: Upload coverage reports to GitHub
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ github.run_number }}
        path: coverage/report/
        retention-days: 30
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ github.run_number }}
        path: coverage/**/*.trx
        retention-days: 30
        
    - name: Comment coverage summary
      if: github.event_name == 'push'
      run: |
        if [ -f "coverage/report/Summary.json" ]; then
          echo "## Code Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Extract coverage percentage from Summary.json
          COVERAGE=$(cat coverage/report/Summary.json | grep -o '"linecoverage":"[^"]*"' | cut -d'"' -f4)
          
          echo "📊 **Line Coverage:** $COVERAGE%" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📁 [View detailed coverage report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
        fi

  build-artifacts:
    name: Build Artifacts
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore ThreadPilot.Integration.sln
        
    - name: Publish Vehicle Service
      run: |
        dotnet publish MultipleLegacySystems.VehicleService \
          --configuration Release \
          --output ./publish/vehicle-service \
          --no-restore
          
    - name: Publish Insurance Service
      run: |
        dotnet publish ThreadPilot.InsuranceService \
          --configuration Release \
          --output ./publish/insurance-service \
          --no-restore
          
    - name: Upload Vehicle Service artifacts
      uses: actions/upload-artifact@v4
      with:
        name: vehicle-service-${{ github.run_number }}
        path: ./publish/vehicle-service/
        retention-days: 30
        
    - name: Upload Insurance Service artifacts
      uses: actions/upload-artifact@v4
      with:
        name: insurance-service-${{ github.run_number }}
        path: ./publish/insurance-service/
        retention-days: 30

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore ThreadPilot.Integration.sln
      
    - name: Run security audit
      run: dotnet list package --vulnerable --include-transitive
      
    - name: Check for outdated packages
      run: dotnet list package --outdated